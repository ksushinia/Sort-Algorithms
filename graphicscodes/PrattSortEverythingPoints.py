import numpy as np
import matplotlib.pyplot as plt

# Данные размеров массивов и времени выполнения для различных типов массивов (в секундах)
sizes = np.array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000])
sorted_times = np.array([0.003866, 0.000602, 0.000677, 0.000799, 0.000791, 0.001212, 0.001511, 0.001349, 0.002059, 0.001799, 0.002376, 0.002258, 0.003249, 0.002548, 0.002909])
nearly_sorted_times = np.array([0.002101, 0.000737, 0.000742, 0.001412, 0.001327, 0.001865, 0.002132, 0.002480, 0.003507, 0.003052, 0.003413, 0.003690, 0.005296, 0.004877, 0.005323])
reverse_sorted_times = np.array([0.001319, 0.000594, 0.000580, 0.000897, 0.000830, 0.001368, 0.001251, 0.001496, 0.002072, 0.001872, 0.002147, 0.002308, 0.003295, 0.002802, 0.004262])
random_times = np.array([0.000691, 0.000741, 0.000752, 0.001519, 0.001486, 0.002354, 0.002342, 0.002653, 0.003239, 0.004087, 0.004018, 0.004155, 0.005871, 0.005172, 0.007292])

# Параметры для графика
plt.figure(figsize=(12, 8))

# Функция для построения регрессионной кривой
def plot_regression(x, y, label):
    # Подгонка полинома второго порядка
    coeffs = np.polyfit(x, y, 2)
    poly = np.poly1d(coeffs)
    # Получение значений для регрессионной кривой
    x_line = np.linspace(min(x), max(x), 100)
    y_line = poly(x_line)
    # Построение точек и регрессионной кривой
    plt.scatter(x, y, label=f"{label} (данные)", s=100)  # Точки
    plt.plot(x_line, y_line, label=f"{label} (кривая)", linewidth=2)  # Регрессия

# Построение для каждого типа массива
plot_regression(sizes, sorted_times, "Отсортированный")
plot_regression(sizes, nearly_sorted_times, "Почти отсортированный")
plot_regression(sizes, reverse_sorted_times, "Обратный отсортированный")
plot_regression(sizes, random_times, "Случайный")

# Настройки графика
plt.title("Все случаи Pratt Sort с точками")
plt.xlabel("Размер массива")
plt.ylabel("Время выполнения (с)")
plt.legend()
plt.grid()
plt.show()
